#Case-study #1
#Developers: Cherkashina D., Ivanova A.,  .

import turtle

turtle.setup(1000, 800) #set the size of the window where the turtle draws
turtle.speed(10)

def square(x, y, a):

    '''
    Function, drawing square.
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a square
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.forward(a)
    turtle.right(90)
    turtle.forward(a)
    turtle.right(90)
    turtle.forward(a)
    turtle.right(90)
    turtle.forward(a)
    turtle.right(90)

def parallelogram(x, y, a, b, c, d):

    '''
    Function, drawing parallelogram
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a parallelogram
    :param b: side width of a parallelogram
    :param c: a first pair of  corners
    :param d: a second pair of corners
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.forward(a)
    turtle.right(c)
    turtle.forward(b)
    turtle.right(d)
    turtle.forward(a)
    turtle.right(c)
    turtle.forward(b)
    turtle.right(d)

def rhomb(x, y, a):

    '''
    Function, drawing rhomb
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a rhomb
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.right(30)
    turtle.right(60)
    turtle.forward(a)
    turtle.right(60)
    turtle.forward(a)
    turtle.right(120)
    turtle.forward(a)
    turtle.right(60)
    turtle.forward(a)
    turtle.right(60)
    turtle.left(30)

def rhomb_1(x, y, a):
    '''
    Function, drawing rhomb.
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a rhomb
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.right(60)
    turtle.forward(a)
    turtle.right(60)
    turtle.forward(a)
    turtle.right(120)
    turtle.forward(a)
    turtle.right(60)
    turtle.forward(a)
    turtle.right(60)

def triangle_rv(x, y, a, b):

    '''
    Function, drawing equilateral triangle
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: size of equal sides
    :param b: the size of the third side
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.right(125)
    turtle.forward(a)
    turtle.right(145)
    turtle.forward(b)
    turtle.right(145)
    turtle.forward(a)
    turtle.left(55)

def triangle_pr_1(x, y, a, b):

    '''
    Function, drawing rectangular triangle
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: the size of the cathets
    :param b: the size of the hypotenuse
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.right(90)
    turtle.forward(a)
    turtle.right(90)
    turtle.forward(a)
    turtle.right(135)
    turtle.forward(b)
    turtle.right(45)

def triangle_pr_2(x, y, a, b):

    '''
     Function, drawing rectangular triangle
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.right(135)
    turtle.forward(b)
    turtle.right(135)
    turtle.forward(a)
    turtle.right(90)
    turtle.forward(a)

def triangle_rvs_1(x, y, a):

    '''
    Function, drawing equilateral triangle
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: the size of the triangle side
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.forward(a)
    turtle.right(120)
    turtle.forward(a)
    turtle.right(120)
    turtle.forward(a)
    turtle.right(120)

def triangle(x, y, a, b):

    '''
    Function, drawing rectangular triangle.
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a triangle
    :param b: side length of b triangle
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.forward(a)
    turtle.left(90)
    turtle.forward(a)
    turtle.left(135)
    turtle.forward(b)
    turtle.left(135)

def triangle4(x, y, a, b, c):
    '''
    Function, drawing rectangular triangle.
    :param x: lower left corner coordinate x
    :param y: lower left corner coordinate y
    :param a: side length of a triangle
    :param b: side length of b triangle
    :param c: side length of c triangle
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.right(60)
    turtle.forward(a)
    turtle.right(120)
    turtle.forward(b)    #Hypotenuse.
    turtle.right(147)
    turtle.forward(c)
    turtle.right(33)

def triangle2(x, y, a, b):
    '''
    Function, drawing rectangular triangle.
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a triangle
    :param b: side length of b triangle
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.left(90)
    turtle.forward(a)
    turtle.right(135)
    turtle.forward(b)
    turtle.right(135)
    turtle.forward(a)
    turtle.left(180)

def triangle_pr_5(x, y, a, b):
    '''
    Function, drawing rectangular triangle.
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a triangle
    :param b: side length of b triangle
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.forward(b)
    turtle.right(135)
    turtle.forward(a)
    turtle.right(135)
    turtle.forward(b)
    turtle.right(90)

def rectangle(x, y, a, b):
    '''
    Function, drawing rectangle.
    :param x: upper left corner coordinate x
    :param y: upper left corner coordinate y
    :param a: side length of a rectangle
    :param b: side length of b rectangle
    :return: None
    '''

    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.forward(a)
    turtle.right(90)
    turtle.forward(b)
    turtle.right(90)
    turtle.forward(a)
    turtle.right(90)
    turtle.forward(b)
    turtle.right(90)

def circle(x, y, a):
    turtle.color('black')
    turtle.fillcolor('LightBlue')
    turtle.begin_fill()
    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.circle(a)
    turtle.end_fill()


